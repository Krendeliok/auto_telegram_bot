services:
  web:
    build: 
      context: ./app/website
      dockerfile: Dockerfile.dev
    container_name: server-dev-c
    restart: always
    depends_on:
      - db
    volumes: 
      - ./app/website:/website
    ports:
      - "5000:5000"
    command: flask --app main:create_flask_app run --host=0.0.0.0 --debug
  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile.dev
    container_name: client-dev-c
    depends_on:
      - web
    volumes:
      - ./app/frontend:/frontend
      - node_modules:/frontend/node_modules/
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
  bot:
    build: ./app/bot
    restart: always
    depends_on:
      - web
      - db
    volumes:
      - ./app/bot:/bot
    env_file:
      - .env
    environment:
      - BASE_API_URL=http://web:5000/api/v1/
  celery_bot:
    build: ./app/bot
    container_name: worker-bot
    depends_on:
      - web
      - db
      - redis
    volumes:
      - ./app/bot:/bot
    env_file:
      - .env
    environment:
      - BASE_API_URL=http://web:5000/api/v1/
    command: celery -A worker.celery_app:app worker --loglevel=info
    restart: always
  celery_beat:
    build: ./app/bot
    container_name: beat-bot
    depends_on:
      - web
      - db
      - redis
    volumes:
      - ./app/bot:/bot
    env_file:
      - .env
    environment:
      - BASE_API_URL=http://web:5000/api/v1/
    command: celery -A worker.celery_app:app beat --loglevel=info
    restart: always
volumes:
  node_modules: