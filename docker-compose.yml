services:
  web:
    build: 
      context: ./app/website
      dockerfile: Dockerfile.prod
    container_name: server-prod
    restart: always
    depends_on:
      - db
    ports:
      - "5000:5000"
    command: gunicorn main:"create_flask_app()" -b 0.0.0.0:5000 --reload
  frontend:
    build: 
      context: ./app/frontend
      dockerfile: Dockerfile.prod
    container_name: frontend-prod
    depends_on:
      - web
    ports: 
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
  bot:
    build: ./app/bot
    restart: always
    depends_on:
      - web
      - db
      - redis
    env_file:
      - .env
    environment:
      - BASE_API_URL=http://web:5000/api/v1/
  db:
    image: postgres:12
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
  redis:
    image: redis:5.0.1
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal -m '${EMAIL}' -d '${DOMAINS}' --agree-tos
  celery_bot:
    build: ./app/bot
    container_name: worker-bot
    depends_on:
      - web
      - db
      - redis
    env_file:
      - .env
    environment:
      - BASE_API_URL=http://web:5000/api/v1/
    command: celery -A worker.celery_app:app worker --loglevel=info
    restart: always
volumes:
  pg_data:
  redis_data: